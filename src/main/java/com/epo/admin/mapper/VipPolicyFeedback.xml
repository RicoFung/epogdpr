<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">   


<mapper namespace="com.epo.admin.entity.VipPolicyFeedback">
	
	<delete id="del" parameterType="com.epo.admin.entity.VipPolicyFeedback">
		delete from vip_policy_feedback
		 where member_code = #{memberCode}  	  
	</delete>
	
	<resultMap type="com.epo.admin.entity.VipPolicyFeedback" id="result">
        <id property="idFeedback" column="id_feedback"/>
        <result property="memberCode" column="member_code"/>
        <result property="feedbackResult" column="feedback_result"/>
        <result property="feedbackTime" column="feedback_time"/>
        <result property="clientIp" column="client_ip"/>
        <result property="clientSentTime" column="client_sent_time"/>
        <result property="browserAgent" column="browser_agent"/>
	</resultMap>
	
	<sql id="columns">
		t.id_feedback, t.member_code, t.feedback_result, date_format(t.feedback_time,'%Y-%m-%d %H:%i:%s') feedback_time, t.client_ip, date_format(t.client_sent_time,'%Y-%m-%d %H:%i:%s') client_sent_time, t.browser_agent 
	</sql>
	
	<sql id="order">
		<choose>
			<when test="@chok.devwork.Ognl@isNotEmpty(sort)">
				order by tt.<include refid="orderParse1"/> ${order}
			</when>
			<when test="@chok.devwork.Ognl@isNotEmpty(multiSort) and @chok.devwork.Ognl@isEmpty(sort)">
				order by <foreach collection="multiSort" index="index" item="item" separator=",">tt.<include refid="orderParse2" /> ${item.sortOrder}</foreach>  
			</when>
		</choose>
	</sql>
	<sql id="orderParse1">
		<if test="sort == 'idFeedback'">id_feedback</if>
		<if test="sort == 'memberCode'">member_code</if>
		<if test="sort == 'feedbackResult'">feedback_result</if>
		<if test="sort == 'feedbackTime'">feedback_time</if>
		<if test="sort == 'clientIp'">client_ip</if>
		<if test="sort == 'clientSentTime'">client_sent_time</if>
		<if test="sort == 'browserAgent'">browser_agent</if>
	</sql>
	<sql id="orderParse2">
		<if test="item.sortName == 'idFeedback'">id_feedback</if>
		<if test="item.sortName == 'memberCode'">member_code</if>
		<if test="item.sortName == 'feedbackResult'">feedback_result</if>
		<if test="item.sortName == 'feedbackTime'">feedback_time</if>
		<if test="item.sortName == 'clientIp'">client_ip</if>
		<if test="item.sortName == 'clientSentTime'">client_sent_time</if>
		<if test="item.sortName == 'browserAgent'">browser_agent</if>
	</sql>
	
	<sql id="page">
		<if test="@chok.devwork.Ognl@isNotEmpty(offset) and @chok.devwork.Ognl@isNotEmpty(limit)"> limit #{offset,javaType=String,jdbcType=NUMERIC}, #{limit,javaType=String,jdbcType=NUMERIC} </if>
	</sql>
	
	<sql id="dynamicWhere">
		<where>	      				
	       <if test="@chok.devwork.Ognl@isNotEmpty(memberCode)"> and t.member_code like concat('%',#{memberCode},'%')</if>
	       <if test="@chok.devwork.Ognl@isNotEmpty(feedbackResult)"> and t.feedback_result = #{feedbackResult}</if>
	       <if test="@chok.devwork.Ognl@isNotEmpty(feedbackTimeFm)"> and t.feedback_time &gt;= #{feedbackTimeFm}</if>
	       <if test="@chok.devwork.Ognl@isNotEmpty(feedbackTimeTo)"> and t.feedback_time &lt;= #{feedbackTimeTo}</if>
	       <if test="@chok.devwork.Ognl@isNotEmpty(clientSentTimeFm)"> and t.client_sent_time &gt;= #{clientSentTimeFm}</if>
	       <if test="@chok.devwork.Ognl@isNotEmpty(clientSentTimeTo)"> and t.client_sent_time &lt;= #{clientSentTimeTo}</if>
		</where>
	</sql>	
	
	<select id="get" resultMap="result">
		select <include refid="columns"/> 
		  from vip_policy_feedback t 
		 where id_feedback = #{idFeedback}  	  
	</select>
	
	<select id="query" resultType="list" resultMap="result">
		select tt.* from 
		(
			select <include refid="columns"/> from vip_policy_feedback t
			<include refid="dynamicWhere" />
		) tt
		<include refid="order" />
		<include refid="page" />
	</select>
	
	<select id="getCount" resultType="int">
		select count(1) from vip_policy_feedback t
		<include refid="dynamicWhere" />
	</select>
</mapper>  
